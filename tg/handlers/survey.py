from aiogram import Router, types
from aiogram.fsm.context import FSMContext
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from sqlalchemy import select
from sqlalchemy.ext.asyncio import AsyncSession

from db.models import User, UserRoom, Gift
from tg.states import FillGiftsState, SurveyState

survey_router = Router(name="–ê–Ω–∫–µ—Ç–∞")

# –°–ø–∏—Å–æ–∫ –≤–æ–ø—Ä–æ—Å–æ–≤ –∞–Ω–∫–µ—Ç—ã
QUESTIONS = [
    {"key": "free_time", "question": "1/9 üöµ‚Äç‚ôÇÔ∏è–ö–∞–∫ —Ç—ã –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ—à—å –ø—Ä–æ–≤–æ–¥–∏—Ç—å —Å–≤–æ–±–æ–¥–Ω–æ–µ –≤—Ä–µ–º—è? (–º–æ–∂–µ—Ç —Ö–æ–±–±–∏?)"},
    {"key": "relaxation", "question": "2/9 ‚õ±Ô∏è–ö–∞–∫–æ–π —Ç–≤–æ–π –ª—é–±–∏–º—ã–π —Å–ø–æ—Å–æ–± —Ä–∞—Å—Å–ª–∞–±–∏—Ç—å—Å—è –ø–æ—Å–ª–µ –Ω–∞–ø—Ä—è–∂–µ–Ω–Ω–æ–≥–æ –¥–Ω—è"},
    {"key": "favorite_color", "question": "3/9 üåà–ö–∞–∫–æ–π —Ç–≤–æ–π –ª—é–±–∏–º—ã–π —Ü–≤–µ—Ç?"},
    {"key": "gift_type",
     "question": "4/9 üí°–ü—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ—à—å –ª–∏ —Ç—ã –ø—Ä–∞–∫—Ç–∏—á–Ω—ã–µ –ø–æ–¥–∞—Ä–∫–∏ –∏–ª–∏ —á—Ç–æ-—Ç–æ –±–æ–ª–µ–µ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–µ/–∫—Ä–µ–∞—Ç–∏–≤–Ω–æ–µ?"},
    {"key": "gift_preference",
     "question": "5/9 ü§î–ï—Å—Ç—å –ª–∏ —É —Ç–µ–±—è –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è –ø–æ —Ç–∏–ø—É –ø–æ–¥–∞—Ä–∫–æ–≤: —á—Ç–æ-—Ç–æ –¥–ª—è –¥–æ–º–∞, –¥–ª—è —Ä–∞–±–æ—Ç—ã, –¥–ª—è –æ—Ç–¥—ã—Ö–∞?"},
    {"key": "allergies",
     "question": "6/9 ü§¢–ï—Å—Ç—å –ª–∏ —É —Ç–µ–±—è –∫–∞–∫–∏–µ-—Ç–æ –∞–ª–ª–µ—Ä–≥–∏–∏ –∏–ª–∏ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è, –æ –∫–æ—Ç–æ—Ä—ã—Ö —Å—Ç–æ–∏—Ç –∑–Ω–∞—Ç—å? (–µ—Å–ª–∏ –¥–∞, —Ç–æ –∫–∞–∫–∏–µ?)"},
    {"key": "favorites", "question": "7/9 ü¶â–ö–∞–∫–∏–µ —Ñ–∏–ª—å–º—ã/–ø–µ—Ä—Å–æ–Ω–∞–∂–∏/–º—É–∑—ã–∫–∞–Ω—Ç—ã —Ç–µ–±–µ –Ω—Ä–∞–≤—è—Ç—Å—è?"},
    {"key": "pleasures",
     "question": "8/9 ‚õ∑Ô∏è–ß—Ç–æ —Ç–µ–±–µ –ø—Ä–∏–Ω–æ—Å–∏—Ç –Ω–∞–∏–±–æ–ª—å—à–µ–µ —É–¥–æ–≤–æ–ª—å—Å—Ç–≤–∏–µ: –∞–∫—Ç–∏–≤–Ω—ã–π –æ—Ç–¥—ã—Ö, —á—Ç–µ–Ω–∏–µ, —Å–ø–æ—Ä—Ç –∏–ª–∏ —á—Ç–æ-—Ç–æ –¥—Ä—É–≥–æ–µ?"},
    {"key": "gift_wishes", "question": "9/9 ‚úèÔ∏è–¢–≤–æ–∏ –ª–∏—á–Ω—ã–µ –ø–æ–∂–µ–ª–∞–Ω–∏—è –∫ –ø–æ–¥–∞—Ä–∫—É?"},
]


@survey_router.message(SurveyState.waiting_for_answer)
async def handle_survey_answer(message: types.Message, state: FSMContext, db: AsyncSession, user: User):
    """
    –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–≤–µ—Ç–∞ –Ω–∞ —Ç–µ–∫—É—â–∏–π –≤–æ–ø—Ä–æ—Å.
    """
    user_data = await state.get_data()
    question_index = user_data.get("question_index", 0)
    answers = user_data.get("answers", {})

    # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞ –Ω–∞ —Ç–µ–∫—É—â–∏–π –≤–æ–ø—Ä–æ—Å
    question_key = QUESTIONS[question_index]["key"]
    answers[question_key] = message.text

    # –ü–µ—Ä–µ—Ö–æ–¥ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É –≤–æ–ø—Ä–æ—Å—É
    question_index += 1
    if question_index < len(QUESTIONS):
        next_question = QUESTIONS[question_index]["question"]
        await state.update_data(question_index=question_index, answers=answers)
        await message.answer(next_question)
    else:
        # –ê–Ω–∫–µ—Ç–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞
        await state.set_state(SurveyState.finished)
        await state.update_data(answers=answers)

        user_room = await db.execute(select(UserRoom).filter_by(user_id=user.id, box_id=int(user_data.get("box_id"))))
        user_room = user_room.scalars().first()
        user_room.profile = answers
        db.add(user_room)
        await db.commit()

        result_text = "üéâ –°–ø–∞—Å–∏–±–æ –∑–∞ –æ—Ç–≤–µ—Ç—ã!\n\n"

        kb = InlineKeyboardMarkup(
            inline_keyboard=[
                [InlineKeyboardButton(text="üîô –í –º–µ–Ω—é", callback_data="main_menu")]
            ]
        )
        await message.answer(result_text, reply_markup=kb)

        user_box_gifts = await db.execute(select(Gift).filter_by(box_id=int(user_data.get("box_id")), user_id=user_room.user_id))
        user_box_gifts = user_box_gifts.scalars().all()
        if len(user_box_gifts) == 0:
            await message.answer("üí°–î–∞–≤–∞–π –∑–∞–ø–æ–ª–Ω–∏–º –ø–æ–¥–∞—Ä–∫–∏, –∫–æ—Ç–æ—Ä—ã–µ —Ç—ã —Ö–æ—Ç–µ–ª –±—ã –ø–æ–ª—É—á–∏—Ç—å. –¢—ã —Å–º–æ–∂–µ—à—å –≤–Ω–µ—Å—Ç–∏ —Å—Ä–∞–∑—É "
                                 "–Ω–µ—Å–∫–æ–ª—å–∫–æ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –ø–æ–¥–∞—Ä–∫–æ–≤. –î–ª—è –∫–∞–∂–¥–æ–≥–æ –ø–æ–¥–∞—Ä–∫–∞ –º–æ–∂–Ω–æ —É–∫–∞–∑–∞—Ç—å, —Ö–æ—Ç–µ–ª –±—ã —Ç—ã "
                                 "–ø–æ–ª—É—á–∏—Ç—å –∏–º–µ–Ω–Ω–æ —ç—Ç–æ—Ç –ø—Ä–µ–¥–º–µ—Ç –ø–æ —Å—Å—ã–ª–∫–µ –∏–ª–∏ –ø—Ä–æ—Å—Ç–æ —á—Ç–æ-–Ω–∏–±—É–¥—å –ø–æ—Ö–æ–∂–µ–µ.\n"
                                 "–ï—Å–ª–∏ —É —Ç–≤–æ–µ–≥–æ –°–∞–Ω—Ç—ã –±—É–¥–µ—Ç –Ω–µ—Å–∫–æ–ª—å–∫–æ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ —Å –æ—Ç–º–µ—Ç–∫–æ–π \"–ò–º–µ–Ω–Ω–æ —ç—Ç–æ\" - –æ–Ω –¥–æ–ª–∂–µ–Ω "
                                 "–±—É–¥–µ—Ç –≤—ã–±—Ä–∞—Ç—å –æ–¥–∏–Ω –∏–∑ —ç—Ç–∏—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤. –¢–∞–∫ –ø–æ–¥–∞—Ä–æ–∫ —Å—Ç–∞–Ω–µ—Ç —Å—é—Ä–ø—Ä–∏–∑–æ–º.\n\n"
                                 "–£—á—Ç–∏, —á—Ç–æ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –∂–µ–ª–∞–µ–º—ã—Ö –ø–æ–¥–∞—Ä–∫–æ–≤ –¥–ª—è —ç—Ç–æ–π –∫–æ—Ä–æ–±–∫–∏ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ —Ç–µ–±–µ —Ç–æ–ª—å–∫–æ "
                                 "–ø–æ–∫–∞ –∫–æ—Ä–æ–±–∫–∞ –æ—Ç–∫—Ä—ã—Ç–∞ –¥–ª—è –Ω–æ–≤—ã—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤. –ï—Å–ª–∏ —Ç—ã –Ω–µ —Ö–æ—á–µ—à—å –∑–∞–ø–æ–ª–Ω—è—Ç—å –ø–æ–¥–∞—Ä–∫–∏, "
                                 "–Ω–∞–ø–∏—à–∏ /stop")
            box_id = int(user_data.get("box_id"))
            await state.update_data(box_id=box_id)
            await state.set_state(FillGiftsState.waiting_for_gift_url)
            await message.answer("üéÅ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å —Å—Å—ã–ª–∫—É –Ω–∞ –ø–æ–¥–∞—Ä–æ–∫ —Å –ª—é–±–æ–≥–æ –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–∞.")
